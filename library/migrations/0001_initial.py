# Generated by Django 5.2.1 on 2025-05-17 08:55

import django.db.models.deletion
import django.utils.timezone
import library.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('corecode', '0001_initial'),
        ('staffs', '0001_initial'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=100)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('category', models.CharField(choices=[('computer_science', 'Computer Science'), ('fiction', 'Fiction'), ('non_fiction', 'Non-Fiction'), ('biography', 'Biography'), ('science', 'Science'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('mathematics', 'Mathematics'), ('biology', 'Biology'), ('geography', 'Geography'), ('english_language', 'English Language'), ('literature_in_english', 'Literature in English'), ('kiswahili', 'Kiswahili'), ('history', 'History'), ('civics', 'Civics'), ('book_keeping', 'Book Keeping'), ('commerce', 'Commerce'), ('bible_knowledge', 'Bible Knowledge'), ('religion', 'Religion'), ('technology', 'Technology'), ('social_studies', 'Social Studies'), ('arts', 'Arts'), ('reference', 'Reference'), ('textbook', 'Textbook'), ('poetry', 'Poetry'), ('drama', 'Drama'), ('business', 'Business'), ('engineering', 'Engineering'), ('health', 'Health'), ('economics', 'Economics'), ('law', 'Law'), ('philosophy', 'Philosophy'), ('psychology', 'Psychology')], max_length=50)),
                ('total_copies', models.PositiveIntegerField(default=1)),
                ('available_copies', models.PositiveIntegerField(default=1)),
                ('shelf_location', models.CharField(blank=True, max_length=50, null=True)),
                ('is_digital', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('book_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='corecode.studentclass')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='BookIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('student', 'Student'), ('staff', 'Staff')], default='student', max_length=10)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('return_date', models.DateField(default=library.models.BookIssue.default_return_date)),
                ('book_number', models.PositiveIntegerField(help_text='Unique copy number of the book (e.g., copy #3)')),
                ('is_returned', models.BooleanField(default=False)),
                ('fine', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='library.book')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_issues', to='staffs.staff')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_issues', to='students.student')),
            ],
            options={
                'verbose_name': 'Book Issue',
                'verbose_name_plural': 'Book Issues',
                'ordering': ['-issue_date', 'book__title'],
            },
        ),
        migrations.CreateModel(
            name='Ebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Upload a digital book file (e.g., PDF, up to 1GB)', upload_to='ebooks/%Y/%m/%d/')),
                ('name', models.CharField(help_text="Name of the uploaded document (e.g., 'Chapter 1 Notes')", max_length=100)),
                ('extracted_html', models.TextField(blank=True, help_text='Cached extracted HTML from PDF', null=True)),
                ('extraction_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Status of text extraction', max_length=20)),
                ('extraction_progress', models.FloatField(default=0.0, help_text='Percentage of extraction progress (0-100)')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebooks', to='library.book')),
            ],
            options={
                'verbose_name': 'Ebook',
                'verbose_name_plural': 'Ebooks',
                'ordering': ['book__title', 'date_created'],
            },
        ),
    ]
