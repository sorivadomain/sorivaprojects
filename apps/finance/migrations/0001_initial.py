# Generated by Django 5.2.1 on 2025-05-17 08:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('corecode', '0001_initial'),
        ('staffs', '0001_initial'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenditureCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Expenditure Category',
                'verbose_name_plural': 'Expenditure Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IncomeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Income Category',
                'verbose_name_plural': 'Income Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenditure_name', models.CharField(max_length=255)),
                ('depositor_name', models.CharField(max_length=255)),
                ('amount_used', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date_given', models.DateField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenditures/attachments/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenditures', to='corecode.academicsession')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenditures', to='finance.expenditurecategory')),
            ],
            options={
                'verbose_name': 'Expenditure',
                'verbose_name_plural': 'Expenditures',
                'ordering': ['-date_given'],
            },
        ),
        migrations.CreateModel(
            name='FeesInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(blank=True, max_length=6, unique=True, verbose_name='Invoice ID')),
                ('invoice_date', models.DateField(default=django.utils.timezone.now, verbose_name='Invoice Date')),
                ('total_invoice_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Invoice Amount')),
                ('status', models.CharField(choices=[('PAID', 'Paid'), ('UNPAID', 'Unpaid'), ('PARTIAL', 'Partial')], default='UNPAID', max_length=10, verbose_name='Status')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_invoices', to='corecode.studentclass', verbose_name='Class Level')),
                ('installment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_invoices', to='corecode.installment', verbose_name='Installment')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_invoices', to='corecode.academicsession', verbose_name='Academic Session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_invoices', to='students.student', verbose_name='Student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_invoices', to='corecode.academicterm', verbose_name='Academic Term')),
            ],
            options={
                'verbose_name': 'Fees Invoice',
                'verbose_name_plural': 'Fees Invoices',
                'db_table': 'fees_invoice',
                'ordering': ['-invoice_date', 'student'],
            },
        ),
        migrations.CreateModel(
            name='FeesStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(blank=True, help_text='Explain how the fees are paid by students of this class (e.g., payment schedule, methods, or terms).', verbose_name='Description')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees_structures', to='corecode.studentclass', verbose_name='Class Level')),
            ],
            options={
                'verbose_name': 'Fees Structure',
                'verbose_name_plural': 'Fees Structures',
                'db_table': 'fees_structure',
                'ordering': ['class_level', '-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount Paid')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('method', models.CharField(choices=[('NMB_BANK', 'NMB Bank'), ('CRDB_BANK', 'CRDB Bank'), ('EXIM_BANK', 'Exim Bank'), ('NBC_BANK', 'NBC Bank'), ('ABSA_BANK', 'ABSA Bank'), ('AZANIA_BANK', 'Azania Bank'), ('M_PESA', 'M-Pesa'), ('YAS', 'Yas'), ('HALOPESA', 'Halopesa'), ('AIRTEL_MONEY', 'Airtel Money'), ('ZANTEL', 'Zantel'), ('CASH', 'Cash'), ('OTHER', 'Other')], max_length=20, verbose_name='Payment Method')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='finance.feesinvoice', verbose_name='Invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payment',
                'ordering': ['-payment_date', 'invoice__student'],
            },
        ),
        migrations.CreateModel(
            name='SchoolIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_obtained', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date_provided', models.DateField()),
                ('obtained_from', models.CharField(max_length=200)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='uploads/incomes/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('income_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incomes', to='finance.incomecategory')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incomes', to='corecode.academicsession')),
            ],
            options={
                'verbose_name': 'School Income',
                'verbose_name_plural': 'School Incomes',
                'ordering': ['-date_provided'],
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], default='January', max_length=10)),
                ('basic_salary_amount', models.DecimalField(decimal_places=2, help_text='Base salary amount for the month', max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('allowances', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional allowances, if any', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('special_bonus', models.DecimalField(decimal_places=2, default=0.0, help_text='Special bonus amount, if any', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('deductions', models.DecimalField(decimal_places=2, default=0.0, help_text='Total deductions, if any', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('net_salary', models.DecimalField(decimal_places=2, editable=False, help_text='Net salary after deductions (calculated as basic_salary_amount + allowances + special_bonus - deductions)', max_digits=15)),
                ('date_given', models.DateField(default=django.utils.timezone.now, help_text='Date the salary was disbursed')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salaries', to='corecode.academicsession')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salaries', to='staffs.staff')),
            ],
            options={
                'verbose_name': 'Salary',
                'verbose_name_plural': 'Salaries',
                'ordering': ['-date_given', 'month'],
                'unique_together': {('staff', 'session', 'month')},
            },
        ),
    ]
