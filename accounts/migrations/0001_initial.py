# Generated by Django 5.2.1 on 2025-05-17 08:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('sw', 'Kiswahili')], default='en', max_length=10)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('confirmation_code', models.CharField(blank=True, help_text='A 6-digit code used for account verification.', max_length=6, null=True, validators=[django.core.validators.RegexValidator(message='Confirmation code must be exactly 6 digits.', regex='^\\d{6}$')])),
                ('is_agreed_to_terms', models.BooleanField(default=False, help_text='User must agree to terms to complete signup.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('admin_id', models.CharField(blank=True, help_text='A unique identifier for the admin account.', max_length=10, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('occupation', models.CharField(blank=True, choices=[('manager_director', 'Manager (Director)'), ('head_master', 'Head Master'), ('second_master', 'Second Master'), ('academic', 'Academic'), ('discipline', 'Discipline'), ('secretary', 'Secretary'), ('librarian', 'Librarian'), ('teacher', 'Teacher'), ('property_admin', 'School Property Administrator'), ('non_teaching', 'Non Teaching Staff')], help_text='The specific occupation of the staff member.', max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='ParentUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('parent_first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('parent_middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('parent_last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('student', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.customuser',),
        ),
    ]
